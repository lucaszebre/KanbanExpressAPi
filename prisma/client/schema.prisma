// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "./client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


model User {
  id       String  @id @default(uuid()) @map("id")
  name     String
  email    String  @unique
  password String
  boards   Board[]
  refreshToken String? @unique
}

model Board {
  id      String   @id @default(uuid())
  name    String
  userId  String
  user    User     @relation(fields: [userId], references: [id] , onDelete: Cascade)
  columns Column[]
}

model Column {
  id      String   @id @default(uuid())
  index   Int @default(autoincrement())
  name    String
  boardId String
  board   Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)
  tasks   Task[]
}

model Task {
  id          String   @id @default(uuid())
  index Int @default(autoincrement())
  title       String
  description String   
  status      String   @default("Todo")
  columnId    String
  column      Column   @relation(fields: [columnId], references: [id], onDelete: Cascade)
  subtasks    Subtask[]
}

model Subtask {
  id          String @id @default(uuid())
  index Int @default(autoincrement())
  title       String 
  isCompleted Boolean @default(false)
  taskId      String
  task        Task   @relation(fields: [taskId], references: [id], onDelete: Cascade)
}