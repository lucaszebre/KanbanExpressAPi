{"version":3,"file":"router.ts","sources":["C:\\Users\\lucas\\Projets\\ExpressKanbanApi\\KanbanExpressAPi\\src\\router.ts"],"names":[],"mappings":";;;;;AAAA,qCAA8B;AAE9B,8CAAmG;AACnG,4CAAwF;AACxF,8CAA6F;AAC7F,gDAAkD;AAGlD,gEAA8B;AAG9B,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAA;AAGvB,SAAS;AACT,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,oBAAW,CAAC,CAAC;AACpC,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,oBAAW,CAAC,CAAC;AACvC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,oBAAW,CAAC,CAAC;AAC/C,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,oBAAW,CAAC,CAAC;AAC5C,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,kBAAS,CAAC,CAAC;AAEjC,UAAU;AACV,MAAM,CAAC,IAAI,CAAC,0BAA0B,EAAE,sBAAa,CAAC,CAAC;AACvD,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAS,CAAC,CAAC;AACtC,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,qBAAY,CAAC,CAAC;AACzC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,qBAAY,CAAC,CAAC;AAC5C,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,sBAAa,CAAC,CAAC;AAGjD,QAAQ;AACR,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,yBAAiB,CAAC,CAAC;AAC5C,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,kBAAU,CAAC,CAAC;AACxC,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,eAAO,CAAC,CAAC;AAClC,MAAM,CAAC,GAAG,CAAC,6BAA6B,EAAC,wBAAgB,CAAC,CAAC;AAE3D,WAAW;AACX,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAa,CAAC,CAAC;AAG1C,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IAC/B,MAAM,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;IAChD,MAAM,KAAK,GAAG,UAAU,IAAI,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAErD,IAAI,KAAK,IAAI,IAAI;QAAE,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IAE9C,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QACtD,IAAI,GAAG;YAAE,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACpC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AACL,kBAAe,MAAM,CAAC","sourcesContent":["import {Router} from 'express'\r\nimport { body, oneOf, validationResult } from \"express-validator\"\r\nimport { createColumns,updateColumn,deleteColumn,getColumn ,addTaskColumn} from './handlers/column'\r\nimport { updateTaskSubtask ,getTask,deleteTask,moveTaskToColumn} from './handlers/tasks'\r\nimport { getBoards,getOneBoard,createboard,updateboard,deleteboard } from './handlers/boards'\r\nimport { updateSubTask } from './handlers/subtask'\r\nimport { handleInputErrors } from './modules/middleware'\r\nimport { createJWT, protect } from './modules/auth'\r\nimport jwt from 'jsonwebtoken'\r\n\r\n\r\nconst router = Router()\r\n\r\n\r\n// Boards\r\nrouter.post('/boards', createboard);\r\nrouter.put('/boards/:id', updateboard);\r\nrouter.delete('/boards/:boardId', deleteboard);\r\nrouter.get('/boards/:boardId', getOneBoard);\r\nrouter.get('/boards', getBoards);\r\n\r\n// Columns\r\nrouter.post('/boards/:boardId/columns', createColumns);\r\nrouter.get('/columns/:id', getColumn);\r\nrouter.put('/columns/:id', updateColumn);\r\nrouter.delete('/columns/:id', deleteColumn);\r\nrouter.post('/columns/:id/tasks', addTaskColumn);\r\n\r\n\r\n// Tasks\r\nrouter.put('/tasks/:id', updateTaskSubtask);\r\nrouter.delete('/tasks/:id', deleteTask);\r\nrouter.get('/tasks/:id', getTask);\r\nrouter.put('/tasks/:id/column/:columnId',moveTaskToColumn);\r\n\r\n// Subtasks\r\nrouter.put('/subtask/:id', updateSubTask);\r\n\r\n\r\nrouter.put('/verify', (req, res) => {\r\n    const authHeader = req.headers['authorization'];\r\n    const token = authHeader && authHeader.split(' ')[1];\r\n  \r\n    if (token == null) return res.sendStatus(401);\r\n  \r\n    jwt.verify(token, process.env.JWT_SECRET, (err, user) => {\r\n      if (err) return res.sendStatus(403);\r\n      return res.status(200).json({ valid: true, user });\r\n    });\r\n  });\r\nexport default router;"]}